Thu 7 Jan 2021 : applied prompt_for_setup in test_polynomials.cpp.

Wed 6 Jan 2021 : in all testers, separated the computation of the sum of
  errors into a separate function.  In addition, factored out the setup
  of the input into separate functions in all testers.
  Moved the prompting for the setup into a separate function,
  out of all test_dbl*_polynomials.cpp.  Update the makefiles.

Tue 5 Jan 2021 : added timers with CUDA events to all kernels, reported by
  all testers.cpp.  Added timers with clock() to all host code, updated
  all testers.cpp.  Improved verbose level in all testers.
  In all testers, improved the settings of the tolerances.

Mon 4 Jan 2021 : extracted code from test_dbl*_polynomials.cpp into separate
  files dbl*_polynomials_testers.  Applied the verbose flag correctly in 
  all dbl*_polynomials_host.cpp.  New polynomial_kernels.cu.
  In addition_jobs.cpp, applied verbose flag correctly.
  Fixed the reporting of number of failures in test_polynomials.cpp.
  In dbl*_polynomials_kernels.cu, doubled the size of the shared memory
  occupied in the padded convolutions of the second input argument.

Sun 3 Jan 2021 : new random5_polynomials and test_dbl5_polynomials, updated
  the makefiles.  New random10_polynomials and test_dbl10_polynomials.
  Added {dbl5,dbl10}_polynomials_host, tested by test_{dbl5,dbl10}_polynomials
  and updated the makefiles.  Edited {dbl2,dbl3,dbl4,dbl8}_polynomials_
  kernels.h, added dbl5_polynomials_kernels, updated test_dbl5_polynomials.
  Added dbl10_polynomials_kernels, tested in test_dbl10_polynomials.

Sat 2 Jan 2021 : new random4_polynomials, edits in {random2,random3}_
  polynomials, new test_dbl4_polynomials, decreased the tolerances in
  test_{dbl2,dbl3}_polynomials.  Updated makefiles.
  Edited {dbl2,dbl3}_polynomials_host.h, added missing free at the end of
  dbl3_polynomials_host.cpp; new dbl4_polynomials_host with updated tests
  in test_dbl4_polynomials.cpp; updated makefiles.
  New dbl4_polynomials_kernels, tested by test_dbl4_polynomials,
  updated the makefiles.  New random8_polynomials, test_dbl8_polynomials.
  New dbl8_polynomials_host, tested by test_dbl8_polynomials.
  New dbl8_polynomials_kernels, tested by test_dbl8_polynomials.

Fri 1 Jan 2021 : new dbl2_polynomials_host, tested by test_dbl2_polynomials,
  updated makefiles.  New job_coordinates with code taken from the
  dbl_polynomials_kernels.h and dbl_polynomials_kernels.cu.
  Defined dbl2_polynomials_kernels, tested by test_dbl2_polynomials,
  updated the makefiles.  New random3_polynomials and test_dbl3_polynomials,
  updated makefiles.  New dbl3_polynomials_host, updated makefiles, and
  updated test_dbl3_polynomials.  Added dbl3_polynomials_kernels.

Thu 31 Dec 2020 : to random_polynomials, added the generation of sums of
  all products, updated test_{{convolution,addition}_jobs,dbl_polynomials}.
  In random_polynomials.cpp, changed the allocation of the accumulator.
  In addition_jobs.cpp, fixed the problems with negative indices.
  Moved writing of job counts to separate write_job_counts,
  adjusted test_dbl_polynomials and the makefiles.
  To random_polynomials, added the definition of cyclic polynomials,
  updated all test programs.  New random2_polynomials, tested by
  test_dbl2_polynomials, updated the makefiles.

Wed 30 Dec 2020 : new functions in dbl_polynomials_host for the additions,
  with or without the addition jobs.  Fixed index in addition_jobs.cpp,
  added special case to addition_job.cpp and dbl_polynomials_host.cpp
  when a forward product is updated with a coefficient of a monomial.
  More bugs fixed in addition_jobs.cpp.  Updated dbl_polynomial_host.cpp
  for cases when a variable does not occur.  Added addition kernels to
  dbl_polynomials_kernels, tested by test_dbl_polynomials.

Tue 29 Dec 2020 : in addition_jobs.cpp, corrected the dimension of the
  difcnt, which should be nbrvar instead of nbrmon.  The first derivative
  is correctly computed with addition jobs, as verified by the updates
  in dbl_polynomials_host.cpp.  Extended addition_job with a type for
  the increment.  Added the jobs for all derivaties to addition_jobs.
  Replaced not, and in addition_jobs.cpp and random_polynomials.cpp.
  In test_addition_jobs and test_dbl_polynomials, printed seedused first.
  In addition_jobs.h, exported the position method, to dbl_polynomials_host,
  added code for jobs for all derivatives, extended test_dbl_polynomials.

Mon 28 Dec 2020 : extended random_polynomials with a check on duplicate
  support vectors, tested in test_dbl_polynomials.cpp.
  To test_addition_jobs.cpp, added differential indices computation.
  Moved the differential indices from test_addition_jobs into the class
  addition_jobs, updated test_dbl_polynomials.  Extended addition_job.cpp
  with the coefficient output.  Added the definition of the jobs for the
  first derivative to addition_jobs, tested by test_addition_jobs.

Sun 27 Dec 2020 : bug fix, in addition_jobs and test_addition_jobs,
  the dimension is the number of monomials, not the number of variables.
  Added recursive make of jobs to addition_jobs, test_addition_jobs.
  In addition_job.h, fixed the ifndef label.  In dbl_polynomials_host,
  added the application of the addition jobs, tested by test_dbl_polynomials.

Sat 26 Dec 2020 : new class in addition_job, used in test_addition_jobs.
  New class in addition_jobs, updated addition_job.cpp and test_addition_jobs.
  Fixed indexing error for the first monomial in addition_jobs.cpp
  and test_addition_jobs.cpp.

Fri 25 Dec 2020 : updated dbl_polynomial_kernels to include the constant.
  New test_addition_jobs.cpp to define the reduction tree of additions.

Thu 24 Dec 2020 : bug fixed in dbl_polynomials_kernels, the computation of
  the job indices does not need the cumulative sums; test_dbl_polynomials
  verifies that the polynomial value with GPU convolutions is correct.
  To dbl_polynomials_kernels, test_dbl_polynomials added computation and
  test on all other derivatives.  Fixes in dbl_polynomials_kernels...
  Fixed the last indexing bug in dbl_polynomials_kernels.cu.

Wed 23 Dec 2020 : edited dbl_polynomials_host.cpp and test_dbl_polynomials.
  Added a first setup for the preparation of the convolution jobs in
  dbl_polynomials_kernels.h and dbl_polynomials_kernels.cu.
  Updated dbl_polynomials_kernels and test_dbl_polynomials with a first
  definition of the kernel to compute all convolutions.
  In dbl_polynomials_kernels.cu, changed dim == BS into deg1 == BS.

Tue 22 Dec 2020 : updated dbl_polynomials_host.cpp and test_dbl_polynomials
  with the computation of first and last derivative.  Simplified 2-variable
  monomials, updated convolution_jobs.cpp and dbl_polynomials_host.cpp.
  Updated dbl_polynomials_host.cpp and test_dbl_polynomials.cpp,
  all derivatives are now computed correctly.
  Improved memory usage in dbl_polynomials_host.cpp.

Mon 21 Dec 2020 : fixed bug in output, in convolution_job.cpp.
  Added get_job() method in convolution_jobs.h, convolution_jobs.cpp,
  to write all convolution_jobs per layer in test_convolution_jobs.
  Bug fix in layer assignment in convolution_jobs.cpp.
  Extended dbl_polynomials_host with function to evaluate and differentiate
  in the order of the convolution layers, tested by test_dbl_polynomials.
  Fixed a bug in convolution_jobs.

Sun 20 Dec 2020 : updated the layer count for the cross products in
  convolution_jobs.cpp, removed functions from test_convolution_jobs.cpp.
  Added convolution_job.h and convolution_job.cpp to define the class
  to represent one convolution job.  Adjusted convolution_jobs.h and *.cpp.
  Updated makefile_windows, added return os statement in convolution_job.cpp.

Sat 19 Dec 2020 : convolution_jobs.h and convolution_jobs.cpp define a class
  to setup the layers of convolution jobs, tested by test_convolution_jobs.

Fri 18 Dec 2020 : extended test_convolution_jobs with layer counts.
  Extended test_convolution_jobs with a frequency table of layer counts.
  Improved the 2-variable case in dbl_polynomials_host.cpp and adjusted
  the counts in test_convolution_jobs.cpp.

Thu 17 Dec 2020 : new random_polynomials, updated dbl_polynomials_host and
  test_dbl_polynomials, so polynomials with one term are no longer special.
  Bug fix in dbl_polynomials_host.cpp for 2 variables in low dimension.
  Added verbose option to dbl_polynomials_host and test_dbl_polynomials.
  New test_convolution_jobs.cpp to collect all convolution jobs.

Wed 16 Dec 2020 : added test_dbl_polynomials.cpp, makefile and makefile_unix.
  Added makefile_windows.  New dbl_polynomials_host.h and .cpp.
