Predictors, correctors, and path trackers in PHCv2.4.84

This directory is newly created in version 2.3.75 to focus on the
predictors, correctors, and path trackers.  Higher-order extrapolators
for use in the predictors were added in version 2.3.79.

The second release brought multi-precision root refiners and the usage
of QR and Least Squares in the correctors at the end of the paths.
In version 2.1, this is extended to tracking solution paths with
multiprecision arithmetic.  Release 2.2 contains the start of
a Newton's method based on numerical differentiation routines and
supports coefficient parameter homotopy continuation.
New in release 2.3 is Newton's method with deflation for singularities
and improved endgame routines based on extrapolation methods.
Newton's method and root refiners are now in a separate directory.
Compact representation of continuation parameters and path tracking
with incremental read/write were introduced in v2.3.05.
The sweep became available via phc -p in v2.3.37 and went to significant
upgrades in v2.3.45.  In v2.3.46, multitasking was added to the blackbox 
polynomial continuation routines.  New in v2.3.58 is the introduction
of correctors with double double and quad double arithmetic.
In v2.3.59 we can run entire paths with double double arithmetic.
Version 2.3.84 offers a basic version of a path tracker with a get_next
method, i.e.: with a generator, for use in phcpy.

------------------------------------------------------------------------------
file name                        : short description
------------------------------------------------------------------------------
standard_correctors              : Newton's method as corrector
dobldobl_correctors              : correctors in double double arithmetic
quaddobl_correctors              : correctors in quad double arithmetic
multprec_correctors              : correctors with multiprecision numbers
ts_correct                       : test on correctors
standard_orthogonal_correctors   : Gauss-Newton method as corrector
dobldobl_orthogonal_correctors   : Gauss-Newton in double double arithmetic
quaddobl_orthogonal_correctors   : Gauss-Newton in quad double arithmetic
ts_ortocor                       : test on orthogonal correctors
standard_predictors              : increment t, predict solutions
dobldobl_predictors              : predictors with double double numbers
quaddobl_predictors              : predictors with quad double numbers
multprec_predictors              : predictors with multiprecision numbers 
ts_preco                         : test on predictor and corrector
-----------------------------------------------------------------------------
standard_dispatch_predictors     : selection of standard predictor
dobldobl_dispatch_predictors     : selection of double double predictor
quaddobl_dispatch_predictors     : selection of quad double predictor
multprec_dispatch_predictors     : selection of multiprecision predictor
standard_data_on_path            : data management for standard path tracking
dobldobl_data_on_path            : data management for dobldobl path tracking
quaddobl_data_on_path            : data management for quaddobl path tracking
standard_path_trackers           : path trackers with standard numbers
dobldobl_path_trackers           : path trackers with double doubles
quaddobl_path_trackers           : path trackers with quad doubles
multprec_path_trackers           : path trackers with multiprecision numbers
ts_path                          : test facility for path trackers
-----------------------------------------------------------------------------
varbprec_corrector_steps         : variable precision corrector steps
standard_path_tracker            : path tracker with "get_next" procedure
dobldobl_path_tracker            : get_next in double double arithmetic
quaddobl_path_tracker            : get_next in quad double arithmetic
varbprec_path_tracker            : variable precision get_next
ts_nxtsol                        : test on path tracker with generator
-----------------------------------------------------------------------------
drivers_to_track_standard_paths  : drivers for tracking with jumpstarting
drivers_to_track_dobldobl_paths  : double double jumpstart path tracking
drivers_to_track_quaddobl_paths  : quad double jumpstart path tracking
ts_track                         : path tracking with increment read/write
------------------------------------------------------------------------------

An important feature is that much of the routines in this library are
independent of how polynomials are represented.
